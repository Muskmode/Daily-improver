// GitHub-ready React app for Daily Growth Tracker // To deploy: Push this to a GitHub repo, then import it into Vercel

import { useState, useEffect } from "react"; import { Card, CardContent } from "@/components/ui/card"; import { Button } from "@/components/ui/button"; import { Input } from "@/components/ui/input"; import { Textarea } from "@/components/ui/textarea"; import { Calendar } from "@/components/ui/calendar"; import { format } from "date-fns";

export default function DailyGrowthApp() { const [date, setDate] = useState(new Date()); const [journal, setJournal] = useState({ gratitude: "", win: "", lesson: "" }); const [skillFocus, setSkillFocus] = useState(""); const [entries, setEntries] = useState({});

useEffect(() => { const stored = localStorage.getItem("dailyEntries"); if (stored) setEntries(JSON.parse(stored)); }, []);

useEffect(() => { localStorage.setItem("dailyEntries", JSON.stringify(entries)); }, [entries]);

const handleSave = () => { const key = format(date, "yyyy-MM-dd"); setEntries({ ...entries, [key]: { journal, skillFocus }, }); setJournal({ gratitude: "", win: "", lesson: "" }); setSkillFocus(""); };

const todayKey = format(date, "yyyy-MM-dd"); const currentEntry = entries[todayKey] || {};

return ( <div className="max-w-3xl mx-auto p-4 space-y-6"> <h1 className="text-3xl font-bold text-center">10-Minute Daily Growth</h1> <Calendar mode="single" selected={date} onSelect={setDate} className="mx-auto" />

<Card>
    <CardContent className="space-y-4 p-4">
      <h2 className="text-xl font-semibold">Journal</h2>
      <Textarea
        placeholder="Gratitude..."
        value={journal.gratitude}
        onChange={(e) => setJournal({ ...journal, gratitude: e.target.value })}
      />
      <Textarea
        placeholder="Win of the day..."
        value={journal.win}
        onChange={(e) => setJournal({ ...journal, win: e.target.value })}
      />
      <Textarea
        placeholder="Lesson learned or reflection..."
        value={journal.lesson}
        onChange={(e) => setJournal({ ...journal, lesson: e.target.value })}
      />
    </CardContent>
  </Card>

  <Card>
    <CardContent className="space-y-4 p-4">
      <h2 className="text-xl font-semibold">Skill Focus</h2>
      <Input
        placeholder="What did you learn or practice today?"
        value={skillFocus}
        onChange={(e) => setSkillFocus(e.target.value)}
      />
    </CardContent>
  </Card>

  <Button onClick={handleSave} className="w-full">Save Entry</Button>

  {currentEntry.journal && (
    <Card>
      <CardContent className="p-4 space-y-2">
        <h2 className="text-xl font-semibold">Today's Summary</h2>
        <p><strong>Gratitude:</strong> {currentEntry.journal.gratitude}</p>
        <p><strong>Win:</strong> {currentEntry.journal.win}</p>
        <p><strong>Lesson:</strong> {currentEntry.journal.lesson}</p>
        <p><strong>Skill Focus:</strong> {currentEntry.skillFocus}</p>
      </CardContent>
    </Card>
  )}
</div>

); }

